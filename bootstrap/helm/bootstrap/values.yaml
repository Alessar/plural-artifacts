external-dns:
  serviceAccount:
    name: external-dns
    create: false
  image:
    registry: dkr.piazza.app
    repository: bootstrap/external-dns
    tag: v0.7.3
    pullPolicy: Always
    pullSecrets:
    - forge-creds
  sources:
  - service
  - ingress
  provider: google
  txtOwnerId: piazza
  policy: sync
  rbac:
    create: true
    serviceAccountName: external-dns
  domainFilters:
  - piazzaapp.com
  google:
    serviceAccountSecret: externaldns

ownerEmail: mguarino46@gmail.com

imagePullSecrets:
- name: forge-creds

application:
  registry: dkr.piazza.app/bootstrap
  tag: v0.8.3

autoscaling:
  ingress:
    minReplicas: 1
    maxReplicas: 11
    targetCPUUtilizationPercentage: 50

loki-stack:
  grafana:
    enabled: false
    sidecar:
      image: {}
      notifiers:
        enabled: false
    imageRenderer:
      enabled: false

ingress-nginx:
  controller:
    service:
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
        service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
    config:
      worker-shutdown-timeout: 240s
      proxy-body-size: '0'

grafana:
  grafana.ini:
    security:
      allow_embedding: true
  admin:
    existingSecret: grafana-credentials
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: default
        orgId: 1
        folder: ''
        type: file
        updateIntervalSeconds: 10
        disableDeletion: true
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
      - name: sidecar
        orgId: 1
        folder: ''
        type: file
        updateIntervalSeconds: 10
        disableDeletion: true
        editable: true
        options:
          path: /var/lib/grafana/dashboards/sidecar
  dashboards:
    default:
      kubernetes-overview:
        gnetId: 10856
        revision: 1
        uid: 'kubernetes-overview'
        datasource: Prometheus
      kubernetes-deepdive:
        gnetId: 8588
        revision: 1
        uid: 'kubernetes-deepdive'
        datasource: Prometheus
      node-overview:
        gnetId: 1860
        revision: 16
        uid: 'node-overview'
        datasource: Prometheus
  service:
    type: NodePort
  persistence:
    enabled: true
  sidecar:
    dashboards:
      provider:
        name: sidecar
        allowUiUpdates: true
      enabled: true
      searchNamespace: ALL
    datasources:
      enabled: true
      searchNamespace: ALL
  ingress:
    enabled: true
    path: /.*
    annotations:
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/use-regex: "true"

prometheus:
  server:
    statefulSet:
      enabled: true

cluster-autoscaler:
  enabled: false