replicaCount: 2

rbac:
  serviceAccountAnnotations: {}

image:
  repository: dkr.piazza.app/forge/forge
  tag: '0.1.1'
  pullPolicy: Always

rtc:
  repository: dkr.piazza.app/forge/rtc
  tag: '0.1.1'

worker:
  repository: dkr.piazza.app/forge/worker
  tag: '0.1.1'

www:
  image: dkr.piazza.app/forge/forge-www
  tag: '0.1.1'
  port: 80

cron:
  image: dkr.piazza.app/forge/cron
  tag: '0.1.1'

imagePullSecrets:
- name: forge-creds

provider: aws
region: us-east-1

api:
  port: 4000
  bucket: plural-assets

dbPasswordSecret: plural-postgresql
rabbitPasswordSecret: plural-rabbitmq

crons:
- cronName: plural-dkr-scan
  cronModule: Task.Docker
  crontab: "0 0 * * *"
  envVars: []

chartmuseum:
  rbac:
    serviceAccountAnnotations: {}
  repository: chartmuseum/chartmuseum
  tag: latest
  bucket: plural-charts
  pullPolicy: Always

registry:
  replicaCount: 1
  podAnnotations: {}
  podLabels: {}
  podDisruptionBudget: {}
  nodeSelector: {}
  tolerations: []
  rbac:
    serviceAccountAnnotations: {}

  persistence:
    accessMode: ReadWriteOnce
    enabled: false
    size: 10Gi

  securityContext:
    enabled: false
    runAsUser: 1000
    fsGroup: 1000

  image:
    repository: registry
    tag: 2.7.1
  secrets:
    haSharedSecret: ""

  configData:
    version: 0.1
    notifications:
      endpoints:
      - name: plural
        url: http://plural-api:4000/dkr/callback
        timeout: 500ms
        threshold: 5
        backoff: 1s
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
    prometheus:
      enabled: true
    auth:
      token:
        realm: forge.piazza.app/dkr
        service: forge.piazza.app/dkr
        issuer: forge.piazza.app
        rootcertbundle: /etc/docker/registry/cert.pem
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3

postgresql:
  metrics:
    enabled: true
  postgresqlExtendedConf:
    max_connections: 100
  postgresqlUsername: forge
  postgresqlDatabase: forge

rabbitmq:
  metrics:
    enabled: true

influxdb:
  resources:
    requests:
      memory: 256Mi
      cpu: 0.2
  env:
  - name: INFLUXDB_DB
    value: forge
  setDefaultUser:
    enabled: true
    user:
      username: forge
      password: null

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  dns: forge.piazza.app
  dkr_dns: dkr.piazza.app
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/session-cookie-path: /socket

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
